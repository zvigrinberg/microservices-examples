server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /orders-management/orders-api/v1
spring:
  application:
    name: demo-microservice1
  jpa:
    database: postgresql
    show-sql: ${SHOW_SQL_COMMANDS:true}
    generate-ddl: ${GENERATE_DDL:true}
#    properties:
#      enable_lazy_load_no_trans: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect


  datasource:
    url: ${JPA_DATASOURCE_URL:jdbc:postgresql://localhost:5432/orders}
    password: ${DB_PASSWORD:mysecretpassword}
    hikari:
      username: ${DB_USERNAME:postgres}
    driver-class-name: org.postgresql.Driver



microservices:
  mslist:
#  - ordersMicroservice:
  - urlWithPort: ${SERVER_PORT_ORDERS:localhost:9999}
    common: /orders-management/orders-infra/v1/order
    get:
    getAll:
    post:
#  - cachingMicroservice:
  - urlWithPort: ${SERVER_PORT_CACHING:localhost:9999}
    get: /orders-management/orders-caching/v1/caching

